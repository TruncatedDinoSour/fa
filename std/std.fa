include 'std/syscalls.fa'

macro STDIN  0 end
macro STDOUT 1 end
macro STDERR 2 end


macro EXIT_SUCCESS  0 end
macro EXIT_FAILURE  1 end


--<
    Write a string to a specified file descriptor

    Takes:
        INT: File descriptor
        STR: The string
>--
macro fputs
    %SYS_write sys 4 1 drop
end


--<
    Print a string and then a newline

    Takes:
        STR: The string
>--
macro puts
    %STDOUT         %fputs  -- The string
    "\n" ro %STDOUT %fputs  -- Newline
end


--<
    Exit with a specified exit code

    Takes:
        INT: The exit code
>--
macro exit
    %SYS_exit sys 2 1 drop
end


--<
    Print a todo messag and exit with EXIT_FAILURE

    Takes:
        INT: The exit code
>--
macro todo
    "TODO: " ro 2 %fputs
    2             %fputs
    "\n"     ro 2 %fputs

    %EXIT_FAILURE %exit
end


--<
    Get current .data

    Returns:
        INT: *data
>--
macro cdptr
    0 %SYS_brk sys 2
end


--<
    Allocate n bytes
    WARNING: Don't forgot to %bfree after
    WARNING: This is a very non-portable macro, use
             %malloc and %mfree

    Takes:
        INT: The buffer size

    Returns:
        INT: The pointer to the new .data
        INT: The pointer to the old .data
>--
macro balloc
    %cdptr add         -- Takes the argument on the stack
    %SYS_brk sys 2     --< Extend the .data section
                           Also returns the new .data size >--
end


--<
    Deallocate n bytes

    Takes:
        INT: The buffer size
>--
macro bfree
    %cdptr   sub       -- Takes the argument on the stack
    %SYS_brk sys 2     -- Shrink .data
    1        drop      -- Drop the current .data
end


--<
    Allocate memory

    Takes:
        INT: The buffer size

    Returns:
        INT: *buffer
>--
macro malloc
    as length      -- Element from the stack

    34             -- Flags
    0              -- Offset
    1 0 sub        -- Fd
    3              -- Prot
    @length deref  -- Length
    0              -- Addr
    %SYS_mmap sys 7

    unname length
end


--<
    Deallocate memory

    Takes:
        INT: The buffer size
        INT: *buffer
>--
macro mfree
    %SYS_munmap sys 3 1 drop
end
