include 'std/syscall.fa'


macro STDIN  0 end
macro STDOUT 1 end
macro STDERR 2 end


macro EXIT_SUCCESS  0 end
macro EXIT_FAILURE  1 end


--<
    Write a string to a specified file descriptor

    Takes:
        INT: File descriptor
        PTR: The string
        INT: The size
>--
macro fputs
    %SYS_write sys 4 1 drop
end


--<
    Print a string and then a newline

    Takes:
        STR: The string
>--
macro puts
    %STDOUT         %fputs  -- The string
    "\n" ro %STDOUT %fputs  -- Newline
end


--<
    Print a character from its charcode to
    a specified file descriptor

    Takes:
        INT: The char code
        INT: The file descriptor
>--
macro fputc
    swap
    as __fputc_charcode

    1 @__fputc_charcode swap %fputs

    unname __fputc_charcode
end


--<
    Wrapper around %fputc for stdout

    Takes:
        INT: The char code
>--
macro putc
    %STDOUT %fputc
    10 %STDOUT %fputc
end


--<
    Exit with a specified exit code

    Takes:
        INT: The exit code
>--
macro exit
    %SYS_exit sys 2 1 drop
end


--<
    Print a todo message and exit with EXIT_FAILURE

    Takes:
        INT: The exit code
>--
macro todo
    "TODO: " ro %STDERR %fputs
    %STDERR             %fputs
    "\n"     ro %STDERR %fputs

    %EXIT_FAILURE %exit
end


--<
    Print an error message and exit with EXIT_FAILURE

    Takes:
        INT: The exit code
>--
macro error
    "ERROR: " ro %STDERR %fputs
    %STDERR             %fputs
    "\n"      ro %STDERR %fputs

    %EXIT_FAILURE %exit
end
